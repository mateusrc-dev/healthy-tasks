// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  email           String         @unique
  username        String
  typeUser        String
  photoUrl        String
  specializacion  String?
  description     String?
  complaint       String?
  Profilepublic   Boolean?       @default(false)
  StatisticPublic Boolean?       @default(false)
  profileForce    Int? // if the statistics are public, clicks on the 'force' button will be counted
  password        String
  created_at      DateTime       @default(now())
  Task            Task[]
  CommentUser     CommentUser[]
  FavoriteTask    FavoriteTask[]

  @@map("users")
}

model Task {
  id             String         @id @default(uuid())
  title          String
  description    String
  professional   User           @relation(fields: [professionalId], references: [id])
  professionalId String
  //recipient      User           @relation(fields: [patientEmail], references: [email])
  patientEmail   String
  carriedOut     Boolean        @default(false)
  Taskpublic     Boolean        @default(false)
  forceTask      Int // if the task are public, clicks on the 'force' button will be counted
  created_at     DateTime       @default(now())
  FavoriteTask   FavoriteTask[]
  Comment        CommentUser[]

  @@map("task")
}

model CommentUser {
  id          String @id @default(uuid())
  description String
  user        User   @relation(fields: [userId], references: [id])
  userId      String
  task        Task   @relation(fields: [taskId], references: [id])
  taskId      String

  @@map("commentUser")
}

model FavoriteTask {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  task   Task   @relation(fields: [taskId], references: [id])
  taskId String

  @@map("favoriteTask")
}
